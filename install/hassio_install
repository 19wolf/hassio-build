#!/bin/bash
set -e

ARCH=$(uname -m)
DOCKER_REPO=pvizeli
URL_VERSION="https://raw.githubusercontent.com/pvizeli/hassio/master/version.json"
URL_START_HASSIO="https://raw.githubusercontent.com/pvizeli/hassio-build/master/install/scripts/start-hassio"

BIN_DIR=/usr/bin
DATA_SHARE=/usr/share/hassio

# Check env
command -v docker > /dev/null 2>&1 || echo "[ERROR] Please install docker first" && exit 1
command -v jq > /dev/null 2>&1 || echo "[ERROR] Please install jq first" && exit 1
command -v socat > /dev/null 2>&1 || echo "[ERROR] Please install socat first" && exit 1

# Check system options
if [ command -v systemctl > /dev/null 2>&1 ]; then
    INIT_SYSTEM=systemd
else
    INIT_SYSTEM=sysvinit
fi

# Parse command line parameters
while [[ $# > 0 ]]; do
    arg="$1"

    case $arg in
        -m|--machine)
            if [ -z "$2" ]; then
                echo "[ERROR] \"$1\" argument needs a value"
            fi
            MACHINE=$2
            shift
            ;;
        -d|--data-share)
            if [ -z "$2" ]; then
                echo "[ERROR] \"$1\" argument needs a value"
            fi
            DATA_SHARE=$2
            shift
            ;;
        *)
            echo "[ERROR] Unrecognized option $1"
            ;;
    esac
    shift
done

# Generate hardware options
case $ARCH in
    "i386" | "i686")
        MACHINE=${MACHINE:=qemux86}
        HOMEASSISTANT_DOCKER="$DOCKER_REPO/$MACHINE-homeassistant"
        HASSIO_DOCKER="$DOCKER_REPO/i386-hassio-supervisor"
    ;;
    "x86_64")
        MACHINE=${MACHINE:=qemux86-64}
        HOMEASSISTANT_DOCKER="$DOCKER_REPO/$MACHINE-homeassistant"
        HASSIO_DOCKER="$DOCKER_REPO/amd64-hassio-supervisor"
    ;;
    "arm" | "armv7l")
        if [ -z $MACHINE ]; then
            echo "[ERROR] Please set machine for $ARCH"
            exit 1
        fi
        HOMEASSISTANT_DOCKER="$DOCKER_REPO/$MACHINE-homeassistant"
        HASSIO_DOCKER="$DOCKER_REPO/armhf-hassio-supervisor"
    ;;
    "aarch64")
        if [ -z $MACHINE ]; then
            echo "[ERROR] Please set machine for $ARCH"
            exit 1
        fi
        HOMEASSISTANT_DOCKER="$DOCKER_REPO/$MACHINE-homeassistant"
        HASSIO_DOCKER="$DOCKER_REPO/aarch64-hassio-supervisor"
    ;;
    *)
        echo "[ERROR] $ARCH unknown!"
        exit 1
    ;;
esac

# Init folders
if [ ! -d "$DATA_SHARE" ]; then
    mkdir -p "$DATA_SHARE"
fi

# Read infos from web
HASSIO_VERSION=$(curl -s $URL_VERSION | jq -e -r '.hassio_tag')

# Install supervisor
docker pull "$HASSIO_DOCKER:$HASSIO_VERSION"
docker tag "$HASSIO_DOCKER:$HASSIO_VERSION" "$HASSIO_DOCKER:latest"

# install start-hassio
curl -sL "$URL_START_HASSIO" > "$BIN_DIR/start-hassio"

sed -i "s/%%SUPERVISOR_IMAGE%%/$HASSIO_DOCKER/g" "$BIN_DIR/start-hassio"
sed -i "s/%%HOMEASSISTANT_IMAGE%%/$HOMEASSISTANT_DOCKER/g" "$BIN_DIR/start-hassio"
sed -i "s/%%DATA_SHARE%%/$DATA_SHARE/g" "$BIN_DIR/start-hassio"

chmod a+x "$BIN_DIR/start-hassio"
